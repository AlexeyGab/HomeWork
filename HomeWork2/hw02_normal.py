# coding: UTF-8

__author__ = 'Габеркорн Алексей Игоревич'

import random
import math

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

print("Задание 1:")

# Заполним список произвольными значениями и напечатаем их по 10 в строке
m1 = []
print("Исходный список:")
for i in range(30):
    m1.append(random.randrange(-100, 100))
    if (i+1) % 10:
        print(f"{m1[i]:4}", end = " ")
    else:
        print(f"{m1[i]:4}")

# Получим новый список с квадратными корнями
m2 = []
for val in m1:
    if val > 0 and (math.sqrt(val) % 1) == 0:
        m2.append(int(math.sqrt(val)))

print("Результат:", m2)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print("Задание 2:")

# словарь с месяцами
dictMonth = {1: "января", 2: "февраля", 3: "марта", 4: "апреля", 5: "мая", 6: "июня", 7: "июля", 8: "августа",
             9: "сентября", 10: "октября", 11: "ноября", 12: "декабря"}

# словарь с днями
dictDay = {1: "первое", 2: "второе", 3: "третье", 4: "четвертое", 5: "пятое", 6: "шестое", 7: "седьмое",
           8: "восьмое", 9: "девятое", 10: "десятое", 11: "одинадцатое", 12: "двенадцатое", 13: "тринадцатое",
           14: "четырнадцатое", 15: "пятнадцатое", 16: "шестнадцатое", 17: "семнадцатое", 18: "восемнадцатое",
           19: "девятнадцатое", 20: "двадцатое", 21: "двадцать первое", 22: "двадцать второе", 23: "двадцать третье",
           24: "двадцать четвертое", 25: "двадцать пятое", 26: "двадцать шестое", 27: "двадцать седьмое",
           28: "двадцать восьмое", 29: "двадцать девятое", 30: "тридцатое", 31: "тридцать первое"}


date = "25.05.2015"
# date = "12.01.2005"
# date = "01.01.2000"

day = int(date[:2])
month = int(date[3:5])
year = date[6:]

print(dictDay[day], dictMonth[month], year, "года")

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

print("Задание 3:")

m3 = []
n = random.randint(1,100)
print("Список из n = {} элементов:".format(n))
for i in range(n):
    m3.append(random.randint(-100, 100))
    if (i+1) % 10:
        print(f"{m3[i]:4}", end = " ")
    else:
        print(f"{m3[i]:4}")

print()
# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print("Задание 4а:")

m4 = []
for i in range(8):
    m4.append(random.randrange(0, 10))

print("Исходный список:")
print(m4)

# Можно проверить на списке из примера
# m4 = [1, 2, 4, 5, 6, 2, 5, 2]
m5 = list(set(m4))

print("Неповторяющиеся элементы исходного списка:")
print(m5)

print("Задание 4б:")

# создадим словарь статистики
dict1 = dict()
for val in m4:
    if val in dict1:
        dict1[val] += 1
    else:
        dict1[val] = 1

# создадим новый список элементов исходного списка, которые не имеют повторений
m6 = []
for k, v in dict1.items():
    if v == 1:
        m6.append(k)
print("Cписок элементов исходного списка, которые не имеют повторений:")
print(m6)